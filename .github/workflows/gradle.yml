# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java
          
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: build
        
    - name: Upload SARIF file
      if: always() 
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: build/reports/spotbugs.sarif
        # Optional category for the results
        # Used to differentiate multiple results for one commit
        category: gradle-spotbugs
        
    - name: Perform CodeQL Analysis
      if: always() 
      uses: github/codeql-action/analyze@v2
      with:
        # Optional. Specify a category to distinguish between multiple analyses
        # for the same tool and ref. If you don't use `category` in your workflow, 
        # GitHub will generate a default category name for you
        category: "codeql-direct"
        
    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    # - name: Publish to GitHub Packages
    #   uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
    #   with:
    #     arguments: publish
    #   env:
    #     USERNAME: ${{ github.actor }}
    #     TOKEN: ${{ secrets.GITHUB_TOKEN }}
